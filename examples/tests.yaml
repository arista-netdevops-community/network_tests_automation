---
anta.tests.aaa:
  - VerifyAcctConsoleMethods:
      # Verifies the AAA accounting console method lists for different accounting types (system, exec, commands, dot1x).
      methods:
        - local
        - none
        - logging
      types:
        - system
        - exec
        - commands
        - dot1x
  - VerifyAcctDefaultMethods:
      # Verifies the AAA accounting default method lists for different accounting types (system, exec, commands, dot1x).
      methods:
        - local
        - none
        - logging
      types:
        - system
        - exec
        - commands
        - dot1x
  - VerifyAuthenMethods:
      # Verifies the AAA authentication method lists for different authentication types (login, enable, dot1x).
      methods:
        - local
        - none
        - logging
      types:
        - login
        - enable
        - dot1x
  - VerifyAuthzMethods:
      # Verifies the AAA authorization method lists for different authorization types (commands, exec).
      methods:
        - local
        - none
        - logging
      types:
        - commands
        - exec
  - VerifyTacacsServerGroups:
      # Verifies if the provided TACACS server group(s) are configured.
      groups:
        - TACACS-GROUP1
        - TACACS-GROUP2
  - VerifyTacacsServers:
      # Verifies TACACS servers are configured for a specified VRF.
      servers:
        - 10.10.10.21
        - 10.10.10.22
      vrf: MGMT
  - VerifyTacacsSourceIntf:
      # Verifies TACACS source-interface for a specified VRF.
      intf: Management0
      vrf: MGMT
anta.tests.avt:
  - VerifyAVTPathHealth:
      # Verifies the status of all AVT paths for all VRFs.
  - VerifyAVTRole:
      # Verifies the AVT role of a device.
      role: edge
  - VerifyAVTSpecificPath:
      # Verifies the status and type of an AVT path for a specified VRF.
      avt_paths:
        - avt_name: CONTROL-PLANE-PROFILE
          vrf: default
          destination: 10.101.255.2
          next_hop: 10.101.255.1
          path_type: direct
anta.tests.bfd:
  - VerifyBFDPeersHealth:
      # Verifies the health of IPv4 BFD peers across all VRFs.
      down_threshold: 2
  - VerifyBFDPeersIntervals:
      # Verifies the timers of IPv4 BFD peer sessions.
      bfd_peers:
        - peer_address: 192.0.255.8
          vrf: default
          tx_interval: 1200
          rx_interval: 1200
          multiplier: 3
        - peer_address: 192.0.255.7
          vrf: default
          tx_interval: 1200
          rx_interval: 1200
          multiplier: 3
  - VerifyBFDPeersRegProtocols:
      # Verifies the registered routing protocol of IPv4 BFD peer sessions.
      bfd_peers:
        - peer_address: 192.0.255.7
          vrf: default
          protocols:
            - bgp
  - VerifyBFDSpecificPeers:
      # Verifies the state of IPv4 BFD peer sessions.
      bfd_peers:
        - peer_address: 192.0.255.8
          vrf: default
        - peer_address: 192.0.255.7
          vrf: default
anta.tests.configuration:
  - VerifyRunningConfigDiffs:
      # Verifies there is no difference between the running-config and the startup-config.
  - VerifyRunningConfigLines:
      # Search the Running-Config for the given RegEx patterns.
      regex_patterns:
        - "^enable password.*$"
        - "bla bla"
  - VerifyZeroTouch:
      # Verifies ZeroTouch is disabled.
anta.tests.connectivity:
  - VerifyLLDPNeighbors:
      # Verifies the connection status of the specified LLDP (Link Layer Discovery Protocol) neighbors.
      neighbors:
        - port: Ethernet1
          neighbor_device: DC1-SPINE1
          neighbor_port: Ethernet1
        - port: Ethernet2
          neighbor_device: DC1-SPINE2
          neighbor_port: Ethernet1
  - VerifyReachability:
      # Test network reachability to one or many destination IP(s).
      hosts:
        - source: Management0
          destination: 1.1.1.1
          vrf: MGMT
          df_bit: True
          size: 100
        - source: Management0
          destination: 8.8.8.8
          vrf: MGMT
          df_bit: True
          size: 100
anta.tests.cvx:
  - VerifyManagementCVX:
      # Verifies the management CVX global status.
      enabled: true
  - VerifyMcsClientMounts:
      # Verify if all MCS client mounts are in mountStateMountComplete.
anta.tests.field_notices:
  - VerifyFieldNotice44Resolution:
      # Verifies that the device is using the correct Aboot version per FN0044.
  - VerifyFieldNotice72Resolution:
      # Verifies if the device is exposed to FN0072, and if the issue has been mitigated.
anta.tests.flow_tracking:
  - VerifyHardwareFlowTrackerStatus:
      # Verifies if hardware flow tracking is running and an input tracker is active. Optionally verifies the tracker interval/timeout and exporter configuration.
      trackers:
        - name: FLOW-TRACKER
          record_export:
            on_inactive_timeout: 70000
            on_interval: 300000
          exporters:
            - name: CV-TELEMETRY
              local_interface: Loopback0
              template_interval: 3600000
anta.tests.greent:
  - VerifyGreenT:
      # Verifies if a GreenT policy other than the default is created.
  - VerifyGreenTCounters:
      # Verifies if the GreenT counters are incremented.
anta.tests.hardware:
  - VerifyAdverseDrops:
      # Verifies there are no adverse drops on DCS-7280 and DCS-7500 family switches.
  - VerifyEnvironmentCooling:
      # Verifies the status of power supply fans and all fan trays.
      states:
        - ok
  - VerifyEnvironmentPower:
      # Verifies the power supplies status.
      states:
        - ok
  - VerifyEnvironmentSystemCooling:
      # Verifies the device's system cooling status.
  - VerifyTemperature:
      # Verifies if the device temperature is within acceptable limits.
  - VerifyTransceiversManufacturers:
      # Verifies if all the transceivers come from approved manufacturers.
      manufacturers:
        - Not Present
        - Arista Networks
        - Arastra, Inc.
  - VerifyTransceiversTemperature:
      # Verifies if all the transceivers are operating at an acceptable temperature.
anta.tests.interfaces:
  - VerifyIPProxyARP:
      # Verifies if Proxy ARP is enabled.
      interfaces:
        - Ethernet1
        - Ethernet2
  - VerifyIllegalLACP:
      # Verifies there are no illegal LACP packets in all port channels.
  - VerifyInterfaceDiscards:
      # Verifies that the interfaces packet discard counters are equal to zero.
  - VerifyInterfaceErrDisabled:
      # Verifies there are no interfaces in the errdisabled state.
  - VerifyInterfaceErrors:
      # Verifies that the interfaces error counters are equal to zero.
  - VerifyInterfaceIPv4:
      # Verifies the interface IPv4 addresses.
      interfaces:
        - name: Ethernet2
          primary_ip: 172.30.11.0/31
          secondary_ips:
            - 10.10.10.0/31
            - 10.10.10.10/31
  - VerifyInterfaceUtilization:
      # Verifies that the utilization of interfaces is below a certain threshold.
      threshold: 70.0
  - VerifyInterfacesSpeed:
      # Verifies the speed, lanes, auto-negotiation status, and mode as full duplex for interfaces.
      interfaces:
        - name: Ethernet2
          auto: False
          speed: 10
        - name: Eth3
          auto: True
          speed: 100
          lanes: 1
        - name: Eth2
          auto: False
          speed: 2.5
  - VerifyInterfacesStatus:
      # Verifies the operational states of specified interfaces to ensure they match expected configurations.
      interfaces:
        - name: Ethernet1
          status: up
        - name: Port-Channel100
          status: down
          line_protocol_status: lowerLayerDown
        - name: Ethernet49/1
          status: adminDown
          line_protocol_status: notPresent
  - VerifyIpVirtualRouterMac:
      # Verifies the IP virtual router MAC address.
      mac_address: 00:1c:73:00:dc:01
  - VerifyL2MTU:
      # Verifies the global L2 MTU of all L2 interfaces.
      mtu: 1500
      ignored_interfaces:
        - Management1
        - Vxlan1
      specific_mtu:
        - Ethernet1/1: 1500
  - VerifyL3MTU:
      # Verifies the global L3 MTU of all L3 interfaces.
      mtu: 1500
      ignored_interfaces:
          - Vxlan1
      specific_mtu:
          - Ethernet1: 2500
  - VerifyLACPInterfacesStatus:
      # Verifies the Link Aggregation Control Protocol (LACP) status of the provided interfaces.
      interfaces:
        - name: Ethernet1
          portchannel: Port-Channel100
  - VerifyLoopbackCount:
      # Verifies the number of loopback interfaces and their status.
      number: 3
  - VerifyPortChannels:
      # Verifies there are no inactive ports in all port channels.
  - VerifySVI:
      # Verifies the status of all SVIs.
  - VerifyStormControlDrops:
      # Verifies there are no interface storm-control drop counters.
anta.tests.lanz:
  - VerifyLANZ:
      # Verifies if LANZ is enabled.
anta.tests.logging:
  - VerifyLoggingAccounting:
      # Verifies if AAA accounting logs are generated.
  - VerifyLoggingErrors:
      # Verifies there are no syslog messages with a severity of ERRORS or higher.
  - VerifyLoggingHostname:
      # Verifies if logs are generated with the device FQDN.
  - VerifyLoggingHosts:
      # Verifies logging hosts (syslog servers) for a specified VRF.
      hosts:
        - 1.1.1.1
        - 2.2.2.2
      vrf: default
  - VerifyLoggingLogsGeneration:
      # Verifies if logs are generated.
  - VerifyLoggingPersistent:
      # Verifies if logging persistent is enabled and logs are saved in flash.
  - VerifyLoggingSourceIntf:
      # Verifies logging source-interface for a specified VRF.
      interface: Management0
      vrf: default
  - VerifyLoggingTimestamp:
      # Verifies if logs are generated with the appropriate timestamp.
anta.tests.mlag:
  - VerifyMlagConfigSanity:
      # Verifies there are no MLAG config-sanity inconsistencies.
  - VerifyMlagDualPrimary:
      # Verifies the MLAG dual-primary detection parameters.
      detection_delay: 200
      errdisabled: True
      recovery_delay: 60
      recovery_delay_non_mlag: 0
  - VerifyMlagInterfaces:
      # Verifies there are no inactive or active-partial MLAG ports.
  - VerifyMlagPrimaryPriority:
      # Verifies the configuration of the MLAG primary priority.
      primary_priority: 3276
  - VerifyMlagReloadDelay:
      # Verifies the reload-delay parameters of the MLAG configuration.
      reload_delay: 300
      reload_delay_non_mlag: 330
  - VerifyMlagStatus:
      # Verifies the health status of the MLAG configuration.
anta.tests.multicast:
  - VerifyIGMPSnoopingGlobal:
      # Verifies the IGMP snooping global status.
      enabled: True
  - VerifyIGMPSnoopingVlans:
      # Verifies the IGMP snooping status for the provided VLANs.
      vlans:
        10: False
        12: False
anta.tests.path_selection:
  - VerifyPathsHealth:
      # Verifies the path and telemetry state of all paths under router path-selection.
  - VerifySpecificPath:
      # Verifies the path and telemetry state of a specific path for an IPv4 peer under router path-selection.
      paths:
        - peer: 10.255.0.1
          path_group: internet
          source_address: 100.64.3.2
          destination_address: 100.64.1.2
anta.tests.profiles:
  - VerifyTcamProfile:
      # Verifies the device TCAM profile.
      profile: vxlan-routing
  - VerifyUnifiedForwardingTableMode:
      # Verifies the device is using the expected UFT mode.
      mode: 3
anta.tests.ptp:
  - VerifyPtpGMStatus:
      # Verifies that the device is locked to a valid PTP Grandmaster.
      gmid: 0xec:46:70:ff:fe:00:ff:a9
  - VerifyPtpLockStatus:
      # Verifies that the device was locked to the upstream PTP GM in the last minute.
  - VerifyPtpModeStatus:
      # Verifies that the device is configured as a PTP Boundary Clock.
  - VerifyPtpOffset:
      # Verifies that the PTP timing offset is within +/- 1000ns from the master clock.
  - VerifyPtpPortModeStatus:
      # Verifies the PTP interfaces state.
anta.tests.routing.bgp:
  - VerifyBGPAdvCommunities:
      # Verifies the advertised communities of a BGP peer.
      bgp_peers:
        - peer_address: 172.30.11.17
          vrf: default
        - peer_address: 172.30.11.21
          vrf: default
  - VerifyBGPExchangedRoutes:
      # Verifies the advertised and received routes of BGP peers.
      bgp_peers:
        - peer_address: 172.30.255.5
          vrf: default
          advertised_routes:
            - 192.0.254.5/32
          received_routes:
            - 192.0.255.4/32
        - peer_address: 172.30.255.1
          vrf: default
          advertised_routes:
            - 192.0.255.1/32
            - 192.0.254.5/32
          received_routes:
            - 192.0.254.3/32
  - VerifyBGPPeerASNCap:
      # Verifies the four octet asn capabilities of a BGP peer.
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
  - VerifyBGPPeerCount:
      # Verifies the count of BGP peers for given address families.
      address_families:
        - afi: "evpn"
          num_peers: 2
        - afi: "ipv4"
          safi: "unicast"
          vrf: "PROD"
          num_peers: 2
        - afi: "ipv4"
          safi: "unicast"
          vrf: "default"
          num_peers: 3
        - afi: "ipv4"
          safi: "multicast"
          vrf: "DEV"
          num_peers: 3
  - VerifyBGPPeerDropStats:
      # Verifies BGP NLRI drop statistics for the provided BGP IPv4 peer(s).
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
          drop_stats:
            - inDropAsloop
            - prefixEvpnDroppedUnsupportedRouteType
  - VerifyBGPPeerMD5Auth:
      # Verifies the MD5 authentication and state of a BGP peer.
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
        - peer_address: 172.30.11.5
          vrf: default
  - VerifyBGPPeerMPCaps:
      # Verifies the multiprotocol capabilities of a BGP peer.
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
          strict: False
          capabilities:
            - ipv4Unicast
  - VerifyBGPPeerRouteLimit:
      # Verifies the maximum routes and optionally verifies the maximum routes warning limit for the provided BGP IPv4 peer(s).
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
          maximum_routes: 12000
          warning_limit: 10000
  - VerifyBGPPeerRouteRefreshCap:
      # Verifies the route refresh capabilities of a BGP peer.
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
  - VerifyBGPPeerUpdateErrors:
      # Verifies BGP update error counters for the provided BGP IPv4 peer(s).
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
          update_error_filter:
            - inUpdErrWithdraw
  - VerifyBGPPeersHealth:
      # Verifies the health of BGP peers for given address families.
      address_families:
        - afi: "evpn"
        - afi: "ipv4"
          safi: "unicast"
          vrf: "default"
        - afi: "ipv6"
          safi: "unicast"
          vrf: "DEV"
          check_tcp_queues: false
  - VerifyBGPSpecificPeers:
      # Verifies the health of specific BGP peer(s) for given address families.
      address_families:
        - afi: "evpn"
          peers:
            - 10.1.0.1
            - 10.1.0.2
        - afi: "ipv4"
          safi: "unicast"
          peers:
            - 10.1.254.1
            - 10.1.255.0
            - 10.1.255.2
            - 10.1.255.4
  - VerifyBGPTimers:
      # Verifies the timers of a BGP peer.
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
          hold_time: 180
          keep_alive_time: 60
        - peer_address: 172.30.11.5
          vrf: default
          hold_time: 180
          keep_alive_time: 60
  - VerifyBgpRouteMaps:
      # Verifies BGP inbound and outbound route-maps of BGP IPv4 peer(s).
      bgp_peers:
        - peer_address: 172.30.11.1
          vrf: default
          inbound_route_map: RM-MLAG-PEER-IN
          outbound_route_map: RM-MLAG-PEER-OUT
  - VerifyEVPNType2Route:
      # Verifies the EVPN Type-2 routes for a given IPv4 or MAC address and VNI.
      vxlan_endpoints:
        - address: 192.168.20.102
          vni: 10020
        - address: aac1.ab5d.b41e
          vni: 10010
anta.tests.routing.generic:
